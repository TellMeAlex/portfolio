# Nginx configuration for React + Vite portfolio application
# Optimized for security, performance, caching, and SPA routing

# Disable Nginx version in HTTP headers (security hardening)
server_tokens off;

# Define upstream server for health checks
upstream app {
    server 127.0.0.1:80;
}

# Redirect all HTTP traffic to HTTPS (requires external reverse proxy for SSL)
# In production with Dokploy, SSL is typically handled by the reverse proxy
server {
    listen 80;
    server_name _;

    # Serve files normally (don't redirect, Dokploy handles SSL)
    root /usr/share/nginx/html;
    index index.html;

    # Health check endpoint (used by Docker and load balancers)
    location /health.html {
        access_log off;
        try_files /index.html =404;
    }

    # Serve static assets with long cache periods
    # Assets are typically hashed by Vite, so they can be cached forever
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        # Enable gzip compression for text-based assets
        gzip on;
        gzip_types text/css text/javascript application/javascript application/json;

        # Cache control: 1 year (31536000 seconds)
        # Browser will cache these files and revalidate only when filename changes
        expires 365d;
        add_header Cache-Control "public, immutable";

        # Allow gzip-compressed versions
        add_header Vary Accept-Encoding;

        # Attempt to serve pre-compressed versions (.js.gz, .css.gz)
        try_files $uri =404;
    }

    # HTML files: short cache, must revalidate
    # Users should check for new index.html on each visit
    location ~* \.html?$ {
        expires 1d;
        add_header Cache-Control "public, must-revalidate, max-age=86400";
        add_header Vary Accept-Encoding;
    }

    # Service worker: no cache (always fetch fresh)
    # Ensures service worker updates are immediately available
    location /sw.js {
        add_header Cache-Control "max-age=0, no-cache, no-store, must-revalidate";
        add_header Pragma no-cache;
        add_header Expires 0;
    }

    # Manifest and other metadata: moderate cache
    location ~* \.json$ {
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }

    # SPA routing: fallback to index.html for client-side routing
    # Any request that doesn't match a file or directory goes to index.html
    # React Router or similar will handle the routing on the client side
    location / {
        try_files $uri $uri/ /index.html;

        # Cache control for index.html
        expires 1d;
        add_header Cache-Control "public, must-revalidate, max-age=86400";

        # Enable gzip compression
        gzip on;
        gzip_types text/plain text/css text/javascript application/json;
        gzip_min_length 1000;
    }

    # Security headers: applied to all responses
    # X-Frame-Options: Prevent clickjacking attacks
    add_header X-Frame-Options "SAMEORIGIN" always;

    # X-Content-Type-Options: Prevent MIME type sniffing
    # Forces browser to respect Content-Type header
    add_header X-Content-Type-Options "nosniff" always;

    # X-XSS-Protection: Enable browser XSS protection
    # (Modern browsers ignore this, but good for older versions)
    add_header X-XSS-Protection "1; mode=block" always;

    # Referrer-Policy: Control what referrer info is sent
    # "strict-origin-when-cross-origin" balances privacy and functionality
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Permissions-Policy: Control browser features
    # Disable potentially sensitive APIs for security
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), accelerometer=()" always;

    # Content Security Policy: Restrict resource loading
    # Prevents XSS and other injection attacks by controlling where resources can load from
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'wasm-unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self';" always;

    # Gzip compression settings for dynamic content
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/xml+rss;
    gzip_comp_level 6;
    gzip_disable "msie6";

    # Increase client upload size (if needed for future features)
    client_max_body_size 10M;

    # Timeouts
    # Request timeout (prevents slow-read attacks)
    send_timeout 30s;
    # Client body timeout
    client_body_timeout 30s;
    # Connection timeout
    keepalive_timeout 75s;

    # Error pages (fallback to index.html for SPA)
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;

    # Access and error logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Hide Nginx version in error pages
    server_tokens off;
}
