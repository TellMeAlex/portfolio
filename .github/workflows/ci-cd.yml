name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20.x'
  CACHE_KEY: v1

jobs:
  # Quality gates and testing
  quality-checks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: Configure yarn registry
      run: |
        yarn config set registry https://registry.yarnpkg.com
        yarn config set always-auth false
        yarn config delete @inditex:registry
        yarn config delete //inditex.jfrog.io/inditex/api/npm/node-public/:_auth
        npm config set registry https://registry.npmjs.org/
        npm config delete //inditex.jfrog.io/inditex/api/npm/node-public/:_auth

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run linting
      run: yarn lint
      continue-on-error: false

    - name: Run format check
      run: yarn format:check
      continue-on-error: false

    - name: Run type checking
      run: yarn type-check
      continue-on-error: false

    - name: Run unit tests
      run: yarn test:unit --coverage
      continue-on-error: false

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # Security scanning
  security-scan:
    runs-on: ubuntu-latest
    needs: quality-checks

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: Configure yarn registry
      run: |
        yarn config set registry https://registry.yarnpkg.com
        yarn config set always-auth false
        npm config set registry https://registry.npmjs.org/

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run yarn audit
      run: yarn audit --level moderate
      continue-on-error: true

# CodeQL anÃ¡lisis removido temporalmente por problemas de permisos
    # - name: Initialize CodeQL
    #   uses: github/codeql-action/init@v2
    #   with:
    #     languages: javascript

    # - name: Perform CodeQL Analysis
    #   uses: github/codeql-action/analyze@v2

  # Build and test
  build-and-test:
    runs-on: ubuntu-latest
    needs: [quality-checks, security-scan]

    strategy:
      matrix:
        environment: [development, staging, production]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: Configure yarn registry
      run: |
        yarn config set registry https://registry.yarnpkg.com
        yarn config set always-auth false
        npm config set registry https://registry.npmjs.org/

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Build application
      run: yarn build:${{ matrix.environment }}
      env:
        CI: true

    - name: Run integration tests
      run: yarn test:integration
      if: matrix.environment == 'staging'

    - name: Run E2E tests
      run: yarn test:e2e
      if: matrix.environment == 'staging'

    - name: Performance audit
      run: yarn audit:performance
      if: matrix.environment == 'production'

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      if: matrix.environment == 'production'
      with:
        name: build-artifacts
        path: |
          dist/
          build/
        retention-days: 30

  # Create deployment trigger
  deployment-trigger:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Trigger deployment
      run: |
        echo "âœ… CI/CD Pipeline completed successfully"
        echo "ðŸš€ SSH deployment workflow will be triggered automatically"
        echo "ðŸ“‹ All quality gates passed, deployment is ready"